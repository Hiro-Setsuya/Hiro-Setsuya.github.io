/* Color variables */
:root {
  --primary-red: #ff3b30;
  --midnight-blue: #0d1b2a;
  --light-gray: #cbcbcb;
  --white: #ffffff;
  --dark: #050505;
  --secondary-dark: #1a1a1a;
}

/* Smooth scrolling and scroll padding for fixed header */
html {
  scroll-behavior: smooth;
  scroll-padding-top: 80px;
}

/* Body background and text color */
body {
  background-color: var(--secondary-dark);
  color: var(--white);
}

/* Paragraph text color */
p {
  color: var(--light-gray);
}

/* Headings color */
h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--white);
}

.offcanvas-end {
  width: 40vw !important;
  max-width: 400px;
  background-color: var(--dark) !important;
  border-left: 2px solid var(--primary-red);
}

.offcanvas-body {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

/* Navbar link underline effect */
.nav-link {
  position: relative;
  display: inline-flex;
  align-items: center;
  color: var(--white);
  gap: 5px; /* space between icon and text */
  transition: color 0.3s ease;
}

.nav-link span {
  position: relative;
}

/* The animated underline */
.nav-link::after {
  content: "";
  position: absolute;
  left: 55%;
  bottom: -4px;
  width: 0;
  height: 2px;
  background-color: var(--primary-red);
  transform: translateX(-50%);
  transition: width 0.3s ease;
}

/* Expand underline on hover or when active */
.nav-link:hover::after,
.nav-link.active::after {
  width: 100%;
}

/* Slightly fade the text on hover */
.nav-link:hover {
  color: var(--primary-red);
}

/* Icon color */
i.icon {
  color: var(--primary-red);
}

.social-links a {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: 40px;
  height: 40px;
  border: 1px solid var(--primary-red);
  border-radius: 50%;
  color: var(--primary-red);
  text-decoration: none;
  transition: all 0.3s ease;
}

.social-links a:hover {
  background-color: var(--primary-red);
  color: var(--white);
}

.social-links i {
  font-size: 18px;
  line-height: 1;
}

/* Typing text effect */
#typing-text::after {
  content: "|";
  animation: blink 0.7s infinite;
}

@keyframes blink {
  50% {
    opacity: 0;
  }
}

/* Image placeholder styling */
.image-placeholder {
  position: relative;
  width: 100%;
  max-width: 450px;
  aspect-ratio: 1/1;
  display: flex;
  justify-content: center;
  align-items: center;
  background: linear-gradient(135deg, var(--secondary-dark), var(--dark));
  border-radius: 1rem;
  border: 2px solid rgba(255, 34, 22, 0.7);
  margin: 0 auto;
  overflow: hidden;
  padding: 0;
  box-shadow: 0 0 6px rgba(255, 34, 22, 0.4), 0 0 12px rgba(255, 34, 22, 0.25),
    inset 0 0 6px rgba(255, 34, 22, 0.15);
}

/* Elegant glow ring â€” subtle outer neon */
.image-placeholder::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 1rem;
  border: 1px solid rgba(255, 34, 22, 0.4);
  box-shadow: 0 0 10px rgba(255, 34, 22, 0.3), 0 0 20px rgba(255, 34, 22, 0.2);
  pointer-events: none;
  z-index: 2;
}

/* Image inside */
.image-placeholder img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  border-radius: 1rem;
}

/* Skills card styling */
.skills-card {
  background-color: var(--dark);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}
.skills-card:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 15px rgba(255, 0, 0, 0.3);
}

/* Project card layout */
.project-card {
  display: flex;
  flex-direction: column;
  height: 100%;
  background-color: var(--secondary-dark);
}

/* Project card paragraph grows to fill space */
.project-card p {
  flex-grow: 1;
}

/* Center button in project card */
.project-card a.btn {
  align-self: center;
}

/* Project card transition effects */
.project-card {
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

/* Hover effect for project card and image placeholder */
.project-card:hover,
.image-placeholder:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 15px rgba(255, 0, 0, 0.3);
}

/* Button styling */
.btn:hover {
  background-color: var(--white);
  color: var(--dark);
  transform: scale(1.02);
  transition: all 0.3s ease;
}

/* Fade-in-up animation */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Base state (invisible) */
.fade-in-up {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.6s ease, transform 0.6s ease;
}

/* When element is visible */
.fade-in-up.visible {
  animation: fadeInUp 0.8s ease-out forwards;
}
